{"version":3,"file":"ngl-ui.dev.js","sources":["../../src/actions/actions.js","../../src/components/SelectOptions.js","../../src/components/Checkbox.js","../../src/components/components.js","../../src/reducers/reducers.js","../../src/ngl-script.js","../../src/ngl-controller.js","../../src/util.js","../../src/ngl-ui.js"],"sourcesContent":["export const SET_STRUCTURE = 'SET_STRUCTURE';\nexport const SET_ASSEMBLY = 'SET_ASSEMBLY';\nexport const SET_ASSEMBLY_OPTIONS = 'SET_ASSEMBLY_OPTIONS';\nexport const SET_COLOR = 'SET_COLOR';\nexport const SET_STYLE = 'SET_STYLE';\nexport const SET_SPIN = 'SET_SPIN';\nexport const SET_WATER = 'SET_WATER';\nexport const SET_HYDROGEN = 'SET_HYDROGEN';\n\nconsole.log(\"ACTIONS file passed thru\");\n\nexport const setStructure = function (pdbId) {\n    return {\n        type: SET_STRUCTURE,\n        pdbId: pdbId\n    };\n}\n\nexport const setAssembly = function (assembly) {\n    console.log(\"ACTIONS: \" + assembly);\n    return {\n        type: SET_ASSEMBLY,\n        assembly: assembly\n    };\n}\n\nexport const setColor = function (color) {\n    console.log(\"ACTIONS: \" + color);\n    return {\n        type: SET_COLOR,\n        color: color\n    };\n}\n\nexport const setStyle = function (style) {\n    console.log(\"ACTIONS: \" + style);\n    return {\n        type: SET_STYLE,\n        style: style\n    };\n}\n\nexport const setSpin = function (spin) {\n    console.log(\"ACTIONS: \" + spin);\n    return {\n        type: SET_SPIN,\n        spin: spin\n    };\n}\n\nexport const setWater = function (water) {\n    console.log(\"ACTIONS: \" + water);\n    return {\n        type: SET_WATER,\n        spin: water\n    };\n}\n\nexport const setHydrogen = function (hydrogen) {\n    console.log(\"ACTIONS: \" + hydrogen);\n    return {\n        type: SET_HYDROGEN,\n        spin: hydrogen\n    };\n}\n\n\nexport const setAssemblyOptions = function (structure) {\n    console.log(\"Dispatching Set Assembly Options\");\n    const options = [];\n    const biomolDict = structure.biomolDict;\n    if( !structure.unitcell && Object.keys( biomolDict ).length === 1 &&\n        biomolDict[ \"BU1\" ] && biomolDict[ \"BU1\" ].isIdentity( structure )\n    ) {\n        // don't add an entry for \"Asymmetric Unit\" / \"Full Structure\" as\n        // there is only one bioassembly with an identity transform on all chains\n        options.push({\n            value: \"BU1\",\n            label: \"Full Structure\"\n        });\n    } else {\n        options.push({\n            value: \"__AU\",\n            label: structure.unitcell ? \"Asymmetric Unit\" : \"Full Structure\"\n        });\n        for( const name in biomolDict ){\n            if( name === \"UNITCELL\" ) {\n                options.push({\n                    value: name,\n                    label: \"Unitcell\"\n                });\n            }else if( name === \"SUPERCELL\" ) {\n                options.push({\n                    value: name,\n                    label: \"Supercell\"\n                });\n            }else if( name.substr( 0, 2 ) === \"BU\" ) {\n                options.push({\n                    value: name,\n                    label: \"Bioassembly \" + name.substr( 2 )\n                });\n            }else{\n                options.push({\n                    value: name,\n                    label: name\n                });\n            }\n        }\n    }\n    return {\n        type: SET_ASSEMBLY_OPTIONS,\n        assemblyOptions: options\n    };\n}\n","import { h, Component } from 'preact';\n\n// TODO: Programatically subscribe to updates to NGL\nclass SelectGroup extends Component {\n    // Action Creator\n    handleChange(e) {\n        const { onChange, action } = this.props;\n        onChange(action(e.target.value));\n    }\n    render() {\n        // Arguments supplied by SelectGroup component\n        const { label, name, options, selected } = this.props;\n        // Push options into an array\n        const optionsList = [];\n\n        console.log('***** ' + label + ' selected: ' + selected + ' ******');\n        console.log(options);\n\n        // Loop thru each Options\n        options.forEach((option) => {\n            optionsList.push(\n                <Option\n                    option={option}\n                    selected={selected}\n                />\n            );\n        });\n\n        return (\n            <div className='form-group'>\n                <label className='col-sm-5 control-label' for={name + 'Select'}>\n                    {label}\n                </label>\n                <div class='col-sm-7'>\n                    <select onChange={this.handleChange.bind(this)} className='form-control input-sm'>\n                        {optionsList}\n                    </select>\n                </div>\n            </div>\n        );\n    }\n}\n\n// List of Options from Select Group\nclass Option extends Component {\n    render() {\n        const { option, selected } = this.props;\n        console.log('++++++ Selected: ' + selected + ' ++++++');\n        // Ternary operator\n        const isSelected = (option.value === selected) ? 'selected' : null;\n        return (\n            <option selected={isSelected} value={option.value}>\n                {option.label}\n            </option>\n        );\n    }\n}\n\nexport default SelectGroup;","import { h, Component } from 'preact';\n\nclass Checkbox extends Component {\n    handleChange(e) {\n        const { onChange, action } = this.props;\n        // console.log(onChange);\n        // console.log(action);\n        // console.log(e.target.checked);\n        onChange(action(e.target.checked));\n    }\n    render() {\n        const { label, isChecked, id } = this.props;\n        return (\n            <div className=\"checkbox\">\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        value={label}\n                        id={id}\n                        checked={isChecked}\n                        onChange={this.handleChange.bind(this)}\n                    />\n                    {label}\n                </label>\n            </div>\n        )\n    }\n}\n\nexport default Checkbox;","import { h, Component } from 'preact';\nimport * as actions from '../actions/actions.js';\nimport SelectGroup from './SelectOptions';\nimport Checkbox from './Checkbox';\n\n// TODO: Break up into different files\nclass Header extends Component {\n    render() {\n        const store = this.props.store;\n        const storeState = store.getState();\n        console.log(\"------------ HEADER SET -------------\");\n        console.log(storeState);\n        return (\n            <div>\n                <h1>{storeState.pdbId}</h1>\n                <h4>{storeState.structureTitle}</h4>\n            </div>\n        );\n    }\n}\n\n// Display Options Panel\nclass DisplayOptions extends Component {\n    render() {\n        const store = this.props.store;\n        const storeState = store.getState();\n        console.log(\"------------ DISPLAY OPTIONS -------------\");\n        console.log(storeState);\n\n        // Uses the SelectGroup class to generate dropdown selection\n        return (\n            <div className='form-horizontal'>\n                <SelectGroup\n                    label='Assembly'\n                    name='assembly'\n                    options={storeState.assemblyOptions}\n                    selected={storeState.assembly}\n                    onChange={store.dispatch}\n                    action={actions.setAssembly}/>\n                <SelectGroup\n                    label='Color'\n                    name='color'\n                    options={storeState.colorOptions}\n                    selected={storeState.color}\n                    onChange={store.dispatch}\n                    action={actions.setColor}/>\n                <SelectGroup\n                    label='Style'\n                    name='style'\n                    options={storeState.styleOptions}\n                    selected={storeState.style}\n                    onChange={store.dispatch}\n                    action={actions.setStyle}/>\n                <Checkbox\n                    label='Spin'\n                    isChecked={storeState.spin}\n                    id=\"spinCheckbox\"\n                    onChange={store.dispatch}\n                    action={actions.setSpin}/>\n                <Checkbox\n                    label='Water'\n                    isChecked={storeState.water}\n                    id=\"waterVisibilityCheckbox\"\n                    onChange={store.dispatch}\n                    action={actions.setWater}/>\n                <Checkbox\n                    label='Hydrogen'\n                    isChecked={storeState.hydrogen}\n                    id=\"hydrogenVisibilityCheckbox\"\n                    onChange={store.dispatch}\n                    action={actions.setHydrogen}/>\n            </div>\n        );\n    }\n}\n\nexport { Header, DisplayOptions };\n\n","import * as actions from '../actions/actions.js';\n\nfunction app(state, action) {\n    console.log('REDUCERS FIRED OFF. OLD STATE');\n    console.log(state);\n    console.log('action.type=' + action.type);\n\n    switch (action.type) {\n        // Defined in initialState - but may be needed if we want to load a different structure\n        case actions.SET_STRUCTURE:\n            return Object.assign({}, state, {\n                pdbId: action.pdbId\n            });\n\n        case actions.SET_ASSEMBLY:\n            return Object.assign({}, state, {\n                assembly: action.assembly\n            });\n        case actions.SET_ASSEMBLY_OPTIONS:\n            return Object.assign({}, state, {\n                assemblyOptions: action.assemblyOptions\n            });\n\n        case actions.SET_COLOR:\n            return Object.assign({}, state, {\n                color: action.color\n            });\n\n        case actions.SET_STYLE:\n            return Object.assign({}, state, {\n                style: action.style\n            });\n        case actions.SET_SPIN:\n            return Object.assign({}, state, {\n                spin: action.spin\n            });\n        case actions.SET_WATER:\n            return Object.assign({}, state, {\n                water: action.water\n            });\n        case actions.SET_HYDROGEN:\n            return Object.assign({}, state, {\n                hydrogen: action.hydrogen\n            });\n        // Cases like: @@redux/INIT\n        default:\n            return state;\n    }\n}\n\nexport { app };\n","var structureComponent;\nvar cartoonRepr, sphereRepr, surfaceRepr;\nvar ligandRepr, ligandSphereRepr, ligandSurfaceRepr;\nvar currentColorScheme = 'rainbow';\nvar currentStyle = 'cartoon';\nvar currentSpin = false;\nvar atomCount, instanceCount;\nvar ligandSele = \"\";\n\nfunction initRepr(_structureComponent, groupNames) {\n    structureComponent = _structureComponent;\n    if (structureComponent.structure.biomolDict[\"BU1\"]) {\n        var assembly = structureComponent.structure.biomolDict[\"BU1\"];\n        atomCount = assembly.getAtomCount(structureComponent.structure);\n        instanceCount = assembly.getInstanceCount();\n    } else {\n        atomCount = structureComponent.structure.getModelProxy(0).atomCount;\n        instanceCount = 1;\n    }\n\n    // feature mostly only available on phones/tablets\n    if (typeof window.orientation !== 'undefined') {\n        atomCount *= 4;  // bump atomCount which is used for deciding quality level\n    }\n    //\n    ligandSele = 'none';\n    if (groupNames) {\n        groupNames = groupNames.split(/,\\s*/);\n        if (groupNames.length) {\n            ligandSele = '[' + groupNames.join('] OR [') + ']';\n        }\n    }\n    //\n    initLigand();\n    initSpheres();\n    initCartoon();\n    initSurface();\n\n    // Set Style and Spin\n    setStyle(currentStyle);\n    setSpin(currentSpin);\n    colorRainbow();\n}\n\n// init representations\nfunction initLigand() {\n    ligandRepr = structureComponent.addRepresentation('ball+stick', {\n        color: 'element',\n        scale: 3.0,\n        aspectRatio: 1.3,\n        sele: ligandSele,\n        visible: false,\n        lazy: true\n    });\n}\nfunction initSpheres() {\n    var quality = atomCount < 15000 ? \"medium\" : \"low\";\n    sphereRepr = structureComponent.addRepresentation('spacefill', {\n        colorScheme: currentColorScheme,\n        colorScale: 'RdYlBu',\n        quality: quality,\n        sele: 'polymer',\n        visible: false,\n        lazy: true\n    });\n    //\n    ligandSphereRepr = structureComponent.addRepresentation('spacefill', {\n        color: 'element',\n        sele: ligandSele,\n        visible: false,\n        lazy: true\n    });\n}\nfunction initCartoon() {\n    var quality = \"low\";\n    if (atomCount < 15000) {\n        quality = \"high\";\n    } else if (atomCount < 70000) {\n        quality = \"medium\";\n    }\n    cartoonRepr = structureComponent.addRepresentation('cartoon', {\n        colorScheme: currentColorScheme,\n        colorScale: 'RdYlBu',\n        aspectRatio: 5,\n        scale: 0.7,\n        quality: quality,\n        visible: false,\n        lazy: true\n    });\n}\nfunction initSurface() {\n    surfaceRepr = structureComponent.addRepresentation('surface', {\n        colorScheme: currentColorScheme,\n        colorScale: 'RdYlBu',\n        surfaceType: \"sas\",\n        probeRadius: 1.4,\n        scaleFactor: Math.min(1.5, Math.max(0.1, 20000 / atomCount)),\n        sele: 'polymer',\n        visible: false,\n        lazy: true\n    });\n    ligandSurfaceRepr = structureComponent.addRepresentation('surface', {\n        colorScheme: 'element',\n        surfaceType: \"sas\",\n        probeRadius: 1.4,\n        scaleFactor: Math.min(1.5, Math.max(0.1, 20000 / atomCount)),\n        sele: ligandSele,\n        visible: false,\n        lazy: true\n    });\n}\n\nfunction styleSpheres() {\n    sphereRepr.setVisibility(true);\n    cartoonRepr.setVisibility(false);\n    surfaceRepr.setVisibility(false);\n    ligandRepr.setVisibility(false);\n    ligandSurfaceRepr.setVisibility(false);\n    ligandSphereRepr.setVisibility(true);\n}\nfunction styleCartoon() {\n    sphereRepr.setVisibility(false);\n    cartoonRepr.setVisibility(true);\n    surfaceRepr.setVisibility(false);\n    ligandRepr.setVisibility(true);\n    ligandSurfaceRepr.setVisibility(false);\n    ligandSphereRepr.setVisibility(false);\n}\nfunction styleSurface() {\n    sphereRepr.setVisibility(false);\n    cartoonRepr.setVisibility(false);\n    surfaceRepr.setVisibility(true);\n    ligandRepr.setVisibility(false);\n    ligandSurfaceRepr.setVisibility(true);\n    ligandSphereRepr.setVisibility(false);\n}\n\n// set color schemes\nfunction colorRainbow() {\n    var p = {colorScheme: 'residueindex', colorScale: 'RdYlBu'};\n    cartoonRepr.setParameters(p);\n    sphereRepr.setParameters(p);\n    surfaceRepr.setParameters(p);\n    currentColorScheme = 'residueindex';\n    console.log('colorRainbow(): currentColorScheme=' + currentColorScheme);\n}\nfunction colorSecondaryStructure() {\n    var p = {colorScheme: 'sstruc'};\n    cartoonRepr.setParameters(p);\n    sphereRepr.setParameters(p);\n    surfaceRepr.setParameters(p);\n    currentColorScheme = 'sstruc';\n    console.log('colorSecondaryStructure(): currentColorScheme=' + currentColorScheme);\n}\nfunction colorChain() {\n    var p = {colorScheme: 'chainindex'};\n    cartoonRepr.setParameters(p);\n    sphereRepr.setParameters(p);\n    surfaceRepr.setParameters(p);\n    currentColorScheme = 'chainindex';\n    console.log('colorChain(): currentColorScheme=' + currentColorScheme);\n}\n\n\n// added for ngl-ui\nfunction setColor(color) {\n    console.log('setColor: color=' + color);\n    switch (color) {\n        case 'rainbow':\n            colorRainbow();\n            break;\n        case 'secondaryStructure':\n            colorSecondaryStructure();\n            break;\n        case 'chain':\n            colorChain();\n            break;\n        default:\n            colorRainbow();\n    }\n}\n\n// Spin - NGL\nfunction setSpin(spin) {\n    if (spin === true) {\n        console.log(\"Spin Set True: stage.setSpin([0, 1, 0], 0.005)\");\n    } else if (spin === false) {\n        console.log(\"Spin Set False: stage.setSpin(null, null)\");\n    }\n}\n\n// Hydrogen\nfunction setHydrogen(hydrogen) {\n    if (hydrogen === true) {\n        console.log(\"Hydrogen Set True: getHydrogenVisibility\");\n    } else if (hydrogen === false) {\n        console.log(\"Hydrogen Set False\");\n    }\n}\n\n// Water\nfunction setWater(water) {\n    if (water === true) {\n        console.log(\"Water Set True: getWaterVisibility\");\n    } else if (water === false) {\n        console.log(\"Water Set False\");\n    }\n}\n\n\n// set styles\nfunction setStyle(style) {\n    console.log('setStyle: style=' + style);\n    currentStyle = style;\n    switch (style) {\n        case 'cartoon':\n            styleCartoon();\n            break;\n        case 'spheres':\n            styleSpheres();\n            break;\n        case 'surface':\n            styleSurface();\n            break;\n        default:\n            colorCartoon();\n    }\n}\n\nexport {initRepr, setColor, setStyle, setSpin, setHydrogen, setWater}\n","// modified for local use - add rcsb url\nconst rcsbUrl = 'http://www.rcsb.org';\n\nconst NglController = function(params) {\n    var signals = {\n        taskCountChanged: new NGL.Signal(),\n        fullscreenChanged: new NGL.Signal(),\n        structureChanged: new NGL.Signal(),\n        symmetryDataLoaded: new NGL.Signal(),\n        validationDataLoaded: new NGL.Signal(),\n        colorSchemeChanged: new NGL.Signal(),\n        modelChanged: new NGL.Signal(),\n        hydrogenVisibilityChanged: new NGL.Signal(),\n        ionVisibilityChanged: new NGL.Signal(),\n        waterVisibilityChanged: new NGL.Signal(),\n        clashVisibilityChanged: new NGL.Signal(),\n        qualityChanged: new NGL.Signal(),\n        assemblyChanged: new NGL.Signal(),\n        symmetryChanged: new NGL.Signal(),\n        interactionChanged: new NGL.Signal(),\n        styleChanged: new NGL.Signal(),\n        ligandStyleChanged: new NGL.Signal(),\n        focusChanged: new NGL.Signal(),\n        clicked: new NGL.Signal(),\n        hovered: new NGL.Signal()\n    };\n    var pdbid;\n    var reduced;\n    var structureComponent;\n    var symmetryBuffer;\n    var symmetryData = {};\n    var spatialHash;\n    var clashBuffer;\n    var validationData;\n    var validationDataLoading;\n    var atomCount;\n    var instanceCount;\n    var axesRepr;\n    var isBackboneOnly;\n\n    // assign properties from params\n    var p = Object.assign({}, params);\n    var colorScheme = p.colorScheme || \"chainname\";\n    var assembly = p.assembly || \"BU1\";\n    var style = p.style !== undefined ? p.style : \"cartoon\";\n    var ligandStyle = p.ligandStyle !== undefined ? p.ligandStyle : \"ball+stick\";\n    var model = p.model || 0;\n    var symmetry = p.symmetry || 0;\n    var interaction = p.interaction || false;\n    var hydrogenVisibility = p.hydrogenVisibility === undefined ? true : p.hydrogenVisibility;\n    var ionVisibility = p.ionVisibility === undefined ? false : p.ionVisibility;\n    var waterVisibility = p.waterVisibility === undefined ? false : p.waterVisibility;\n    var clashVisibility = p.clashVisibility === undefined ? false : p.clashVisibility;\n    var quality = p.quality === undefined ? \"auto\" : p.quality;\n    var spin = p.spin === undefined ? false : p.spin;\n    var focus = p.focus === undefined ? 0 : p.focus;\n    var hasStructureFactors = p.hasStructureFactors === undefined ? false : p.hasStructureFactors;\n\n    // rl - stage already created in ngl-ui.js\n    //var stage = new NGL.Stage(id, {\n    //    backgroundColor: \"white\",\n    //    hoverTimeout: 500\n    //});\n    //this.stage = stage;\n    var stage;\n    var tasks;\n    // rl - setStage (and tasks)  - called from ngl-ui.js after stage is created\n    function setStage(_stage) {\n        stage = _stage;\n        stage.signals.fullscreenChanged.add(function(fullscreen) {\n            signals.fullscreenChanged.dispatch(fullscreen);\n        });\n        stage.signals.clicked.add(function(pickingData) {\n            signals.clicked.dispatch(pickingData);\n        });\n        stage.signals.hovered.add(function(pickingData) {\n            signals.hovered.dispatch(pickingData);\n        });\n        window.addEventListener(\"resize\", function() {\n            stage.handleResize();\n        }, false);\n        tasks = new NGL.Counter();\n        tasks.listen(stage.tasks);\n        tasks.signals.countChanged.add(function(delta, count) {\n            signals.taskCountChanged.dispatch(delta, count);\n        });\n        setSpin(spin);\n\n        // rl - added from.jsp\n        signals.clicked.add( function( pd ){\n            console.log('pd=' + pd );\n            var msg;\n            if( pd.atom ){\n                msg = \"Atom: \" + pd.atom.qualifiedName();\n            } else if( pd.bond ) {\n                msg = \"Bond: \" +\n                    pd.bond.atom1.qualifiedName() + \" - \" + pd.bond.atom2.qualifiedName();\n            } else {\n                msg = \"\";\n            }\n            document.getElementById('pickingInfo').innerHTML = msg;\n        } );\n    }\n\n    var polymerReprDict = {};\n    var polymerReprDefs = {\n        \"unitcell\": {\n            disableImpostor: true,\n            radiusSegments: 16\n        },\n        \"cartoon\": {\n            colorScheme: getColorScheme,\n            colorScale: getColorScale,\n            aspectRatio: 5,\n            scale: 0.7,\n            quality: \"custom\",\n            subdiv: function() {\n                if (quality === \"auto\") {\n                    if (atomCount < 15000) {\n                        return 12;\n                    } else if (atomCount < 70000) {\n                        return 6;\n                    } else {\n                        return 3;\n                    }\n                } else {\n                    if (quality === \"high\") {\n                        return 12;\n                    } else if (quality === \"medium\") {\n                        return 6;\n                    } else {\n                        return 3;\n                    }\n                }\n            },\n            radialSegments: function() {\n                if (quality === \"auto\") {\n                    if (atomCount < 15000) {\n                        return 20;\n                    } else if (atomCount < 70000) {\n                        return 10;\n                    } else {\n                        return 6;\n                    }\n                } else {\n                    if (quality === \"high\") {\n                        return 20;\n                    } else if (quality === \"medium\") {\n                        return 10;\n                    } else {\n                        return 6;\n                    }\n                }\n            },\n            sele: function() {\n                var sele = \"\";\n                if (model !== \"all\") {\n                    sele += \"/\" + model;\n                }\n                return sele;\n            }\n        },\n        \"base\": {\n            colorScheme: getColorScheme,\n            colorScale: getColorScale,\n            quality: \"custom\",\n            sphereDetail: function() {\n                if (quality === \"auto\") {\n                    return atomCount < 15000 ? 1 : 0;\n                } else {\n                    if (quality === \"high\") {\n                        return 1;\n                    } else if (quality === \"medium\") {\n                        return 1;\n                    } else {\n                        return 0;\n                    }\n                }\n            },\n            radialSegments: function() {\n                if (quality === \"auto\") {\n                    if (atomCount < 15000) {\n                        return 20;\n                    } else if (atomCount < 70000) {\n                        return 10;\n                    } else {\n                        return 5;\n                    }\n                } else {\n                    if (quality === \"high\") {\n                        return 20;\n                    } else if (quality === \"medium\") {\n                        return 10;\n                    } else {\n                        return 5;\n                    }\n                }\n            },\n            sele: function() {\n                var sele = \"polymer and nucleic\";\n                if (model !== \"all\") {\n                    sele += \" and /\" + model;\n                }\n                return sele;\n            }\n        },\n        \"backbone\": {\n            lineOnly: function() {\n                if (quality === \"auto\") {\n                    return atomCount > 250000;\n                } else {\n                    return quality === \"low\";\n                }\n            },\n            colorScheme: getColorScheme,\n            colorScale: getColorScale,\n            scale: 2.0,\n            sele: function() {\n                var sele = \"\";\n                if (model !== \"all\") {\n                    sele += \"/\" + model;\n                }\n                return sele;\n            }\n        },\n        \"surface\": {\n            colorScheme: getColorScheme,\n            colorScale: getColorScale,\n            surfaceType: \"sas\",\n            probeRadius: 1.4,\n            useWorker: true,\n            scaleFactor: function() {\n                var sf;\n                if (quality === \"low\") {\n                    sf = 0.1;\n                } else if (quality === \"medium\") {\n                    sf = 0.7;\n                } else if (quality === \"high\") {\n                    sf = 1.7;\n                } else {\n                    sf = Math.min(1.5, Math.max(0.1, 50000 / atomCount));\n                }\n                return sf;\n            },\n            sele: function() {\n                var sele = \"polymer and ( protein or nucleic )\";\n                if (model !== \"all\") {\n                    sele += \" and /\" + model;\n                }\n                if (hydrogenVisibility === false) {\n                    sele += \" and not hydrogen\";\n                }\n                return sele;\n            }\n        },\n        \"spacefill\": {\n            colorScheme: getColorScheme,\n            colorScale: getColorScale,\n            quality: \"custom\",\n            sphereDetail: function() {\n                if (quality === \"auto\") {\n                    return atomCount < 15000 ? 1 : 0;\n                } else {\n                    if (quality === \"high\") {\n                        return 1;\n                    } else if (quality === \"medium\") {\n                        return 1;\n                    } else {\n                        return 0;\n                    }\n                }\n            },\n            sele: function() {\n                var sele = \"polymer and ( protein or nucleic )\";\n                if (model !== \"all\") {\n                    sele += \" and /\" + model;\n                }\n                if (hydrogenVisibility === false) {\n                    sele += \" and not hydrogen\";\n                }\n                return sele;\n            }\n        },\n        \"licorice\": {\n            colorScheme: getColorScheme,\n            colorScale: getColorScale,\n            multipleBond: \"symmetric\",\n            quality: \"custom\",\n            sphereDetail: function() {\n                if (quality === \"auto\") {\n                    return atomCount < 15000 ? 1 : 0;\n                } else {\n                    if (quality === \"high\") {\n                        return 1;\n                    } else if (quality === \"medium\") {\n                        return 1;\n                    } else {\n                        return 0;\n                    }\n                }\n            },\n            radialSegments: function() {\n                if (quality === \"auto\") {\n                    if (atomCount < 15000) {\n                        return 20;\n                    } else if (atomCount < 70000) {\n                        return 10;\n                    } else {\n                        return 5;\n                    }\n                } else {\n                    if (quality === \"high\") {\n                        return 20;\n                    } else if (quality === \"medium\") {\n                        return 10;\n                    } else {\n                        return 5;\n                    }\n                }\n            },\n            sele: function() {\n                var sele = \"polymer and ( protein or nucleic )\";\n                if (model !== \"all\") {\n                    sele += \" and /\" + model;\n                }\n                if (hydrogenVisibility === false) {\n                    sele += \" and not hydrogen\";\n                }\n                return sele;\n            }\n        },\n        \"ball+stick\": {\n            colorScheme: getColorScheme,\n            colorScale: getColorScale,\n            multipleBond: \"symmetric\",\n            quality: \"custom\",\n            sphereDetail: function() {\n                if (quality === \"auto\") {\n                    return atomCount < 15000 ? 1 : 0;\n                } else {\n                    if (quality === \"high\") {\n                        return 1;\n                    } else if (quality === \"medium\") {\n                        return 1;\n                    } else {\n                        return 0;\n                    }\n                }\n            },\n            radialSegments: function() {\n                if (quality === \"auto\") {\n                    if (atomCount < 15000) {\n                        return 20;\n                    } else if (atomCount < 70000) {\n                        return 10;\n                    } else {\n                        return 5;\n                    }\n                } else {\n                    if (quality === \"high\") {\n                        return 20;\n                    } else if (quality === \"medium\") {\n                        return 10;\n                    } else {\n                        return 5;\n                    }\n                }\n            },\n            sele: function() {\n                var sele;\n                if (!reduced && validationData) {\n                    sele = \"( \" + validationData.clashSele + \" )\";\n                    if (model !== \"all\") {\n                        sele += \" and /\" + model;\n                    }\n                    if (hydrogenVisibility === false) {\n                        sele += \" and not hydrogen\";\n                    }\n                } else {\n                    sele = \"NONE\";\n                }\n                return sele;\n            }\n        }\n    };\n    var ligandReprDict = {};\n    var ligandReprDefs = {\n        \"spacefill\": {\n            colorScheme: getLigandColorScheme,\n            quality: function() {\n                return \"medium\";\n            },\n            sele: function() {\n                var sele = \"( not polymer or not ( protein or nucleic ) )\";\n                if (model !== \"all\") {\n                    sele += \" and /\" + model;\n                }\n                if (hydrogenVisibility === false) {\n                    sele += \" and not hydrogen\";\n                }\n                if (ionVisibility === false) {\n                    sele += \" and not ion\";\n                }\n                if (waterVisibility === false) {\n                    sele += \" and not water\";\n                }\n                return sele;\n            }\n        },\n        \"ball+stick\": {\n            multipleBond: \"symmetric\",\n            colorScheme: getLigandColorScheme,\n            quality: function() {\n                return \"medium\";\n            },\n            scale: 2.5,\n            aspectRatio: 1.2,\n            sele: function() {\n                var sele = \"( not polymer or not ( protein or nucleic ) )\";\n                if (model !== \"all\") {\n                    sele += \" and /\" + model;\n                }\n                if (hydrogenVisibility === false) {\n                    sele += \" and not hydrogen\";\n                }\n                if (ionVisibility === false) {\n                    sele += \" and not ion\";\n                }\n                if (waterVisibility === false) {\n                    sele += \" and not water\";\n                }\n                return sele;\n            }\n        }\n    };\n    var interactionReprDict = {};\n    var interactionReprDefs = {\n        \"licorice\": {\n            multipleBond: \"symmetric\",\n            colorScheme: getLigandColorScheme,\n            colorValue: \"lightsteelblue\",\n            quality: function() {\n                return \"medium\";\n            },\n            scale: 1.5,\n            sele: function() {\n                if (interaction && structureComponent) {\n                    var s = structureComponent.structure;\n                    var withinSele = new NGL.Selection(interaction + (model !== \"all\" ? \" and /\" + model : \"\"));\n                    var as = s.getAtomSetWithinSelection(withinSele, 5);\n                    if (model !== \"all\") {\n                        as.intersection(s.getAtomSet(new NGL.Selection(\"/\" + model)));\n                    }\n                    var asGroup = s.getAtomSetWithinGroup(as);\n                    var sele = asGroup.toSeleString();\n                    if (hydrogenVisibility === false) {\n                        sele += \" and not hydrogen\";\n                    }\n                    if (ionVisibility === false) {\n                        sele += \" and not ion\";\n                    }\n                    if (waterVisibility === false) {\n                        sele += \" and not water\";\n                    }\n                    if (model !== \"all\") {\n                        sele += \" and /\" + model;\n                    }\n                    return sele;\n                } else {\n                    return \"NONE\";\n                }\n            }\n        },\n        \"ball+stick\": {\n            multipleBond: \"symmetric\",\n            colorScheme: getLigandColorScheme,\n            quality: function() {\n                return \"medium\";\n            },\n            scale: 2.5,\n            aspectRatio: 1.2,\n            sele: function() {\n                var sele = interaction ? interaction : \"NONE\";\n                if (hydrogenVisibility === false) {\n                    sele += \" and not hydrogen\";\n                }\n                if (model !== \"all\") {\n                    sele += \" and /\" + model;\n                }\n                return sele;\n            }\n        },\n        \"label\": {\n            color: \"#333333\",\n            zOffset: 2.0,\n            attachment: \"middle-center\",\n            showBackground: true,\n            backgroundColor: \"white\",\n            backgroundOpacity: 0.5,\n            scale: 0.6,\n            sele: function() {\n                if (interaction && structureComponent) {\n                    var s = structureComponent.structure;\n                    var withinSele = new NGL.Selection(interaction + (model !== \"all\" ? \" and /\" + model : \"\"));\n                    var as = s.getAtomSetWithinSelection(withinSele, 5);\n                    if (model !== \"all\") {\n                        as.intersection(s.getAtomSet(new NGL.Selection(\"/\" + model)));\n                    }\n                    var asGroup = s.getAtomSetWithinGroup(as);\n                    var sele = asGroup.toSeleString();\n                    if (hydrogenVisibility === false) {\n                        sele += \" and not hydrogen\";\n                    }\n                    if (ionVisibility === false) {\n                        sele += \" and not ion\";\n                    }\n                    if (waterVisibility === false) {\n                        sele += \" and not water\";\n                    }\n                    if (model !== \"all\") {\n                        sele += \" and /\" + model;\n                    }\n                    sele += \" and ( ( protein and .CA ) or ( nucleic and .P ) )\";\n                    return sele;\n                } else {\n                    return \"NONE\";\n                }\n            }\n        },\n        \"surface\": {\n            colorScheme: getLigandColorScheme,\n            opacity: 0.5,\n            side: \"front\",\n            surfaceType: \"sas\",\n            probeRadius: 1.4,\n            useWorker: false,\n            scaleFactor: 2.5,\n            sele: function() {\n                var sele = interaction ? interaction : \"NONE\";\n                if (hydrogenVisibility === false) {\n                    sele += \" and not hydrogen\";\n                }\n                if (model !== \"all\") {\n                    sele += \" and /\" + model;\n                }\n                return sele;\n            }\n        },\n    };\n\n    function evalParam(paramValue) {\n        if (typeof paramValue === \"function\") {\n            return paramValue();\n        } else {\n            return paramValue;\n        }\n    }\n\n    function getPolymerParam(reprName, paramName) {\n        return evalParam(polymerReprDefs[reprName][paramName]);\n    }\n\n    function getLigandParam(reprName, paramName) {\n        return evalParam(ligandReprDefs[reprName][paramName]);\n    }\n\n    function getInteractionParam(reprName, paramName) {\n        return evalParam(interactionReprDefs[reprName][paramName]);\n    }\n\n    function makeRepresentations(reprDefs, reprDict) {\n        if (!structureComponent) return;\n        for (var reprName in reprDefs) {\n            var reprParams = reprDefs[reprName];\n            var params = {\n                lazy: true,\n                visible: false,\n                assembly: assembly\n            };\n            for (var paramName in reprParams) {\n                params[paramName] = evalParam(reprParams[paramName]);\n            }\n            if (reprDict[reprName]) {\n                reprDict[reprName].dispose();\n            }\n            reprDict[reprName] = structureComponent.addRepresentation(reprName, params);\n        }\n    }\n\n    function makeCounts() {\n        var structure = structureComponent.structure;\n        var _assembly = structure.biomolDict[assembly];\n        if (_assembly) {\n            atomCount = _assembly.getAtomCount(structure)\n            if (model !== \"all\") {\n                atomCount /= structure.modelStore.count;\n            }\n            instanceCount = _assembly.getInstanceCount();\n        } else {\n            if (model === \"all\") {\n                atomCount = structure.atomStore.count;\n            } else {\n                atomCount = structure.getModelProxy(0).atomCount;\n            }\n            instanceCount = 1;\n        }\n        if (typeof window.orientation !== 'undefined') {\n            atomCount *= 4;\n        }\n        isBackboneOnly = structure.atomStore.count / structure.residueStore.count < 2;\n        if (isBackboneOnly) {\n            atomCount *= 10;\n        }\n    }\n\n    function setStructure(comp) {\n        console.log('setStructure');\n        structureComponent = comp;\n        initStructure();\n        signals.structureChanged.dispatch(structureComponent);\n    }\n\n    function initStructure() {\n        console.log('initStructure');\n        if (!structureComponent) return;\n        var s = structureComponent.structure;\n        spatialHash = new NGL.SpatialHash(s.atomStore, s.boundingBox);\n        makeCounts();\n        if (getStyleNames(true)[style] === undefined) {\n            style = getDefaultStyle();\n        }\n        if (getSymmetryNames()[symmetry] === undefined) {\n            symmetry = 0;\n        }\n        if (getSymmetryInfo() === undefined) {\n            loadSymmetryData(assembly).then(updateSymmetry);\n        }\n        setSymmetry(symmetry);\n        makeRepresentations(polymerReprDefs, polymerReprDict);\n        makeRepresentations(ligandReprDefs, ligandReprDict);\n        makeRepresentations(interactionReprDefs, interactionReprDict);\n        structureComponent.setDefaultAssembly(assembly);\n        axesRepr = structureComponent.addRepresentation(\"axes\", {\n            visible: false\n        });\n        setStyle(style);\n        setLigandStyle(ligandStyle);\n        setColorScheme(colorScheme);\n        if (assembly === \"UNITCELL\") {\n            polymerReprDict[\"unitcell\"].setVisibility(true);\n        } else if (assembly === \"SUPERCELL\") {\n            setLigandStyle(\"\");\n        } else {\n            axesRepr.repr.align();\n        }\n        setClashVisibility();\n        centerView();\n        setInteraction(interaction);\n    }\n\n    // this method no longer called - see ngl.jsp, which uses it to set the stage - see setPdbid below\n    /*\n    function loadPdbid(_pdbid, _assembly, _reduced) {\n        console.log('loadPdbid');\n        pdbid = _pdbid;\n        reduced = _reduced;\n        symmetryData = {};\n        if (symmetryBuffer) {\n            symmetryBuffer.dispose();\n            symmetryBuffer = undefined;\n        }\n        validationData = undefined;\n        if (clashBuffer) {\n            clashBuffer.dispose();\n            clashBuffer = undefined;\n        }\n        if (_assembly !== undefined) {\n            assembly = _assembly;\n        }\n        var mmtfUrl = \"rcsb://\" + pdbid + (_reduced ? \".bb\" : \"\") + \".mmtf\";\n        var mmcifUrl = \"rcsb://\" + pdbid + \".cif\";\n        var params = {\n            assembly: assembly,\n            defaultRepresentation: false\n        };\n        return stage.loadFile(mmtfUrl, params).then(setStructure).catch(function(e) {\n            console.error(e);\n            return stage.loadFile(mmcifUrl, params).then(setStructure).catch(function(e) {\n                console.error(e);\n            });\n        });\n    }\n    */\n\n    // rl - added setPdbid because loadPdbid is not called\n    function setPdbid(_pdbid, _assembly, _reduced) {\n        console.log('setPdbid');\n        pdbid = _pdbid;\n        reduced = _reduced;\n        symmetryData = {};\n        if (symmetryBuffer) {\n            symmetryBuffer.dispose();\n            symmetryBuffer = undefined;\n        }\n        validationData = undefined;\n        if (clashBuffer) {\n            clashBuffer.dispose();\n            clashBuffer = undefined;\n        }\n        if (_assembly !== undefined) {\n            assembly = _assembly;\n        }\n    }\n\n\n    function loadSymmetryData(_assembly) {\n        tasks.increment();\n        return retrieveSymmetryData(pdbid, _assembly).then(function(data) {\n            tasks.decrement();\n            if (!data || !data.symmetries || !data.symmetries.length) {\n                symmetry = -1;\n            } else {\n                data.symmetries = data.symmetries.filter(function(sym) {\n                    return sym.pointGroup !== \"C1\";\n                });\n                if (!data.symmetries.length) {\n                    symmetry = -1;\n                }\n            }\n            symmetryData[_assembly] = data;\n            signals.symmetryDataLoaded.dispatch(data);\n        }).catch(function(e) {\n            tasks.decrement();\n            console.error(e);\n        });\n    }\n\n    function loadValidationData() {\n        validationData = undefined;\n        validationDataLoading = true;\n        tasks.increment();\n        return retrieveValidationData(pdbid).then(function(data) {\n            tasks.decrement();\n            validationData = data;\n            validationDataLoading = false;\n            signals.validationDataLoaded.dispatch(data);\n        });\n    }\n\n    function updateSelections() {\n        var name;\n        for (name in polymerReprDict) {\n            polymerReprDict[name].setSelection(getPolymerParam(name, \"sele\"));\n        }\n        for (name in ligandReprDict) {\n            ligandReprDict[name].setSelection(getLigandParam(name, \"sele\"));\n        }\n        for (name in interactionReprDict) {\n            interactionReprDict[name].setSelection(getInteractionParam(name, \"sele\"));\n        }\n    }\n\n    function setStyle(value) {\n        style = value;\n        for (var name in polymerReprDict) {\n            if (name === \"unitcell\" && assembly === \"UNITCELL\") {\n                polymerReprDict[\"unitcell\"].setVisibility(true);\n            } else if (name === \"ball+stick\" && clashVisibility) {\n                polymerReprDict[\"ball+stick\"].setVisibility(true);\n            } else if (name === \"base\" && style === \"cartoon\") {\n                polymerReprDict[\"base\"].setVisibility(true);\n            } else {\n                polymerReprDict[name].setVisibility(name === style);\n            }\n        }\n        signals.styleChanged.dispatch(style);\n    }\n\n    function setLigandStyle(value) {\n        ligandStyle = value;\n        for (var name in ligandReprDict) {\n            ligandReprDict[name].setVisibility(name === ligandStyle);\n        }\n        signals.ligandStyleChanged.dispatch(ligandStyle);\n    }\n\n    function setColorScheme(value) {\n        if (value !== undefined) colorScheme = value;\n        if ([\"fit\", \"geo\"].includes(colorScheme) && validationData === undefined) {\n            if (validationDataLoading) {\n                signals.validationDataLoaded.addOnce(setColorScheme);\n            } else {\n                loadValidationData().then(setColorScheme);\n            }\n        } else {\n            for (var name in polymerReprDict) {\n                polymerReprDict[name].setParameters({\n                    colorScheme: getPolymerParam(name, \"colorScheme\"),\n                    colorScale: getPolymerParam(name, \"colorScale\")\n                });\n            }\n            for (var name in ligandReprDict) {\n                ligandReprDict[name].setParameters({\n                    colorScheme: getLigandParam(name, \"colorScheme\"),\n                    colorScale: getLigandParam(name, \"colorScale\")\n                });\n            }\n            for (var name in interactionReprDict) {\n                interactionReprDict[name].setParameters({\n                    colorScheme: getInteractionParam(name, \"colorScheme\"),\n                    colorScale: getInteractionParam(name, \"colorScale\")\n                });\n            }\n        }\n        signals.colorSchemeChanged.dispatch(colorScheme);\n    }\n\n    function setModel(value) {\n        if (value !== \"all\") value = parseInt(value);\n        if (value !== model && (model === \"all\" || value === \"all\")) {\n            model = value;\n            initStructure();\n        } else {\n            model = value;\n            updateSelections();\n        }\n        if (clashBuffer) {\n            clashBuffer.dispose();\n            clashBuffer = undefined;\n        }\n        setClashVisibility();\n        signals.modelChanged.dispatch(model);\n    }\n\n    function setHydrogenVisibility(value) {\n        hydrogenVisibility = value;\n        updateSelections();\n        signals.hydrogenVisibilityChanged.dispatch(hydrogenVisibility);\n    }\n\n    function setIonVisibility(value) {\n        ionVisibility = value;\n        updateSelections();\n        signals.ionVisibilityChanged.dispatch(ionVisibility);\n    }\n\n    function setWaterVisibility(value) {\n        waterVisibility = value;\n        updateSelections();\n        signals.waterVisibilityChanged.dispatch(waterVisibility);\n    }\n\n    function setClashVisibility(value) {\n        if (value !== undefined) clashVisibility = value;\n        if (clashVisibility) {\n            if (validationData === undefined) {\n                if (validationDataLoading) {\n                    signals.validationDataLoaded.addOnce(setClashVisibility);\n                } else {\n                    loadValidationData().then(setClashVisibility);\n                }\n            } else {\n                if (clashBuffer) {\n                    clashBuffer.setVisibility(true);\n                } else {\n                    var sele = (model === \"all\" ? undefined : \"/\" + model);\n                    clashBuffer = new ClashBuffer(validationData.clashDict, structureComponent.structure, {\n                        sele: sele\n                    });\n                    clashBuffer.attach(structureComponent);\n                }\n                updateSelections();\n                polymerReprDict[\"ball+stick\"].setVisibility(true);\n            }\n        } else {\n            if (clashBuffer) {\n                clashBuffer.setVisibility(false);\n            }\n            polymerReprDict[\"ball+stick\"].setVisibility(false);\n        }\n        signals.clashVisibilityChanged.dispatch(clashVisibility);\n    }\n\n    function setQuality(value) {\n        quality = value;\n        polymerReprDict[\"surface\"].setParameters({\n            scaleFactor: getPolymerParam(\"surface\", \"scaleFactor\")\n        });\n        polymerReprDict[\"cartoon\"].setParameters({\n            subdiv: getPolymerParam(\"cartoon\", \"subdiv\"),\n            radialSegments: getPolymerParam(\"cartoon\", \"radialSegments\")\n        });\n        polymerReprDict[\"backbone\"].setParameters({\n            lineOnly: getPolymerParam(\"backbone\", \"lineOnly\")\n        });\n        polymerReprDict[\"spacefill\"].setParameters({\n            sphereDetail: getPolymerParam(\"spacefill\", \"sphereDetail\"),\n        });\n        signals.qualityChanged.dispatch(quality);\n    }\n\n    function getDefaultStyle() {\n        if (atomCount < 200000) {\n            return \"cartoon\";\n        } else {\n            return \"surface\";\n        }\n    }\n\n    function getColorScale() {\n        if (colorScheme === \"hydrophobicity\") {\n            return \"RdYlGn\";\n        } else if (colorScheme === \"bfactor\") {\n            return \"OrRd\";\n        } else {\n            return \"RdYlBu\";\n        }\n    }\n\n    function getColorScheme() {\n        if (colorScheme === \"fit\") {\n            return validationData ? validationData.fitScheme : \"chainname\";\n        } else if (colorScheme === \"geo\") {\n            return validationData ? validationData.geoScheme : \"chainname\";\n        } else {\n            return colorScheme;\n        }\n    }\n\n    function getLigandColorScheme() {\n        if (colorScheme === \"bfactor\") {\n            return \"bfactor\";\n        } else if (colorScheme === \"fit\") {\n            return validationData ? validationData.fitScheme : \"element\";\n        } else if (colorScheme === \"geo\") {\n            return validationData ? validationData.geoScheme : \"chainname\";\n        } else {\n            return \"element\";\n        }\n    }\n\n    function setAssembly(value) {\n        assembly = value;\n        initStructure();\n        signals.assemblyChanged.dispatch(assembly);\n    }\n\n    function setInteraction(value) {\n        interaction = value;\n        if (structureComponent) {\n            var s = structureComponent.structure;\n            var available = Object.keys(getInteractionNames());\n            if (interaction && !available.includes(interaction)) {\n                var residues = [];\n                s.eachResidue(function(rp) {\n                    var sele = \"\";\n                    if (rp.resno !== undefined) sele += rp.resno;\n                    if (rp.inscode) sele += \"^\" + rp.inscode;\n                    if (rp.chain) sele += \":\" + rp.chainname;\n                    residues.push(sele);\n                }, new NGL.Selection(interaction + \" and ( not polymer or not ( protein or nucleic ) )\"));\n                if (available.includes(residues[0])) {\n                    interaction = residues[0]\n                } else {\n                    interaction = \"\";\n                }\n            }\n            for (var name in interactionReprDict) {\n                var sele = getInteractionParam(name, \"sele\");\n                if (interaction) {\n                    interactionReprDict[name].setSelection(sele);\n                    interactionReprDict[name].setVisibility(true);\n                } else {\n                    interactionReprDict[name].setVisibility(false);\n                    interactionReprDict[name].setSelection(sele);\n                }\n            }\n            if (interaction) {\n                structureComponent.centerView(true, interaction);\n                stage.viewer.zoom(5);\n                var sceneSize = stage.viewer.boundingBox.size().length();\n                var interactionSize = sceneSize;\n                if (structureComponent && interaction) {\n                    var bb = s.getBoundingBox(new NGL.Selection(interaction));\n                    interactionSize = Math.max(10, Math.min(sceneSize, bb.size().length() - 5));\n                }\n                if (ligandStyle) {\n                    setLigandStyle(\"\");\n                }\n                setFocus(Math.min(95, 100 - ((interactionSize / sceneSize) * 100)));\n            } else {\n                setFocus(0);\n                if (!style) {\n                    setStyle(getDefaultStyle());\n                }\n                if (!ligandStyle) {\n                    setLigandStyle(\"ball+stick\");\n                }\n                centerView();\n            }\n        }\n        signals.interactionChanged.dispatch(interaction);\n    }\n\n    function setSpin(value) {\n        spin = value;\n        if (spin === true) {\n            stage.setSpin([0, 1, 0], 0.005);\n        } else if (value === false) {\n            stage.setSpin(null, null);\n        }\n    }\n\n    // Add in Stage as Argument\n    function setSpinStage(stage, value) {\n        spin = value;\n        if (spin === true) {\n            stage.setSpin([0, 1, 0], 0.005);\n        } else if (value === false) {\n            stage.setSpin(null, null);\n        }\n    }\n\n    function setFocus(value) {\n        focus = parseInt(value);\n        stage.setParameters({\n            clipNear: focus / 2,\n            fogFar: 100 - (focus / 2),\n            fogNear: 100 - (focus / 2) - (focus / 20)\n        });\n        signals.focusChanged.dispatch(focus);\n    }\n\n    function getSymmetryInfo() {\n        var data = symmetryData[assembly];\n        if (data && data.nrSymmetries) {\n            return data.symmetries[symmetry];\n        } else {\n            return undefined;\n        }\n    }\n\n    function updateSymmetry() {\n        if (symmetryBuffer) {\n            symmetryBuffer.dispose();\n            symmetryBuffer = undefined;\n        }\n        var data = getSymmetryInfo();\n        if (data && data.symmetryAxes) {\n            symmetryBuffer = new SymmetryBuffer(data.symmetryAxes, {});\n            symmetryBuffer.attach(structureComponent);\n        }\n        if (data && data.rotation && data.center) {\n            var r = data.rotation;\n            var m3 = new NGL.Matrix3().set(parseFloat(r.m00), parseFloat(r.m01), parseFloat(r.m02), parseFloat(r.m10), parseFloat(r.m11), parseFloat(r.m12), parseFloat(r.m20), parseFloat(r.m21), parseFloat(r.m22));\n            var c = new NGL.Vector3().copy(data.center);\n            var v1 = new NGL.Vector3(parseFloat(r.m00), parseFloat(r.m01), parseFloat(r.m02));\n            var v2 = new NGL.Vector3(parseFloat(r.m10), parseFloat(r.m11), parseFloat(r.m12));\n            var v3 = new NGL.Vector3(parseFloat(r.m20), parseFloat(r.m21), parseFloat(r.m22));\n            stage.viewer.alignView(v3, v1, c, false);\n            stage.viewer.centerView(true);\n        }\n    }\n\n    function setSymmetry(value) {\n        symmetry = parseInt(value) || 0;\n        var data = getSymmetryInfo();\n        if (symmetry === -1) {\n            if (symmetryBuffer) {\n                symmetryBuffer.dispose();\n                symmetryBuffer = undefined;\n            }\n        } else if (data === undefined) {\n            if (symmetryBuffer) {\n                symmetryBuffer.dispose();\n                symmetryBuffer = undefined;\n            }\n            loadSymmetryData(assembly).then(updateSymmetry);\n        } else {\n            updateSymmetry();\n            setFocus(0);\n            if (!style) {\n                setStyle(getDefaultStyle());\n            }\n        }\n        signals.symmetryChanged.dispatch(symmetry);\n    }\n\n    function centerView() {\n        stage.centerView();\n    }\n\n    function downloadScreenshot() {\n        stage.makeImage({\n            factor: 2,\n            antialias: true,\n            trim: false,\n            transparent: false\n        }).then(function(blob) {\n            NGL.download(blob, pdbid + \"_screenshot.png\");\n        });\n    }\n\n    function toggleFullscreen(element) {\n        stage.toggleFullscreen(element);\n    }\n\n    function getStyleNames(recommended) {\n        var styleDict = {\n            \"\": \"None\",\n            backbone: \"Backbone\",\n            surface: \"Surface\",\n        };\n        if (recommended) {\n            if (atomCount < 100000) {\n                styleDict[\"cartoon\"] = \"Cartoon\";\n            }\n            if (atomCount < 80000) {\n                styleDict[\"spacefill\"] = \"Spacefill\";\n            }\n            if (atomCount < 80000) {\n                styleDict[\"licorice\"] = \"Licorice\";\n            }\n        } else {\n            styleDict[\"cartoon\"] = \"Cartoon\";\n            if (!isBackboneOnly) {\n                styleDict[\"spacefill\"] = \"Spacefill\";\n                styleDict[\"licorice\"] = \"Licorice\";\n            }\n        }\n        return styleDict;\n    }\n\n    function getLigandStyleNames() {\n        return {\n            \"\": \"None\",\n            \"ball+stick\": \"Ball & Stick\",\n            spacefill: \"Spacefill\"\n        };\n    }\n\n    function getModelNames() {\n        var modelDict = {};\n        if (structureComponent) {\n            var modelStore = structureComponent.structure.modelStore;\n            if (modelStore.count > 1) {\n                modelDict[\"all\"] = \"All Models\";\n            }\n            for (var i = 0; i < modelStore.count; ++i) {\n                modelDict[i] = \"Model \" + (i + 1);\n            }\n        }\n        return modelDict;\n    }\n\n    function getAssemblyNames() {\n        var assemblyDict = {};\n        if (structureComponent) {\n            var structure = structureComponent.structure;\n            var biomolDict = structure.biomolDict;\n            if (!structure.unitcell && Object.keys(biomolDict).length === 1 && biomolDict[\"BU1\"] && biomolDict[\"BU1\"].isIdentity(structure)) {\n                assemblyDict[\"BU1\"] = \"Full Structure\";\n            } else {\n                assemblyDict[\"__AU\"] = (structure.unitcell ? \"Asymmetric Unit\" : \"Full Structure\");\n                for (var name in biomolDict) {\n                    if (name === \"UNITCELL\") {\n                        assemblyDict[name] = \"Unitcell\";\n                    } else if (name === \"SUPERCELL\") {\n                        assemblyDict[name] = \"Supercell\";\n                    } else if (name.substr(0, 2) === \"BU\") {\n                        assemblyDict[name] = \"Bioassembly \" + name.substr(2);\n                    } else {\n                        assemblyDict[name] = name;\n                    }\n                }\n            }\n        }\n        return assemblyDict;\n    }\n\n    function getColorSchemeNames() {\n        var schemeDict = {\n            chainname: \"By Chain\",\n            residueindex: \"Rainbow\",\n            element: \"By Element\",\n            bfactor: \"By B-factor\",\n            sstruc: \"By Secondary Structure\",\n            hydrophobicity: \"By Hydrophobicity\",\n            fit: \"By Density Fit\",\n            geo: \"By Geometry Quality\"\n        };\n        if (structureComponent) {\n            var methods = structureComponent.structure.header.experimentalMethods;\n            if (methods && !methods.includes(\"X-RAY DIFFRACTION\") && !methods.includes(\"ELECTRON CRYSTALLOGRAPHY\") && !methods.includes(\"NEUTRON DIFFRACTION\")) {\n                delete schemeDict.bfactor;\n                delete schemeDict.fit;\n            }\n        }\n        if (!hasStructureFactors) {\n            delete schemeDict.fit;\n        }\n        return schemeDict;\n    }\n\n    function getSymmetryNames() {\n        var symmetryDict = {\n            \"-1\": \"None\"\n        };\n        var data = symmetryData[assembly];\n        if (data && data.symmetries) {\n            for (var i = 0; i < data.symmetries.length; ++i) {\n                var sym = data.symmetries[i];\n                var type = sym.local ? \"local\" : \"global\";\n                if (sym.pseudoSymmetric) {\n                    type += \", pseudo\";\n                }\n                symmetryDict[i] = sym.pointGroup + \" (\" + type + \")\";\n            }\n        }\n        return symmetryDict;\n    }\n\n    function getInteractionNames() {\n        var interactionDict = {\n            \"\": \"None\"\n        };\n        if (structureComponent) {\n            var s = structureComponent.structure;\n            var ligandSele = \"( not polymer or not ( protein or nucleic ) ) and not ( water or ACE or NH2 )\";\n            var _assembly = s.biomolDict[assembly];\n            if (_assembly) {\n                ligandSele += \" and (\" + _assembly.getSelection().string + \")\";\n            }\n            var ligandSelection = new NGL.Selection();\n            s.eachResidue(function(rp) {\n                if (rp.isWater()) return;\n                var sele = \"\";\n                if (rp.resno !== undefined) sele += rp.resno;\n                if (rp.inscode) sele += \"^\" + rp.inscode;\n                if (rp.chain) sele += \":\" + rp.chainname;\n                var name = (rp.resname ? \"[\" + rp.resname + \"]\" : \"\") + sele;\n                interactionDict[sele] = name;\n            }, new NGL.Selection(ligandSele));\n        }\n        return interactionDict;\n    }\n    // functions\n    this.signals = signals;\n    //this.loadPdbid = loadPdbid; // rl - not used\n    this.centerView = centerView;\n    this.downloadScreenshot = downloadScreenshot;\n    this.toggleFullscreen = toggleFullscreen;\n    this.setStyle = setStyle;\n    this.setLigandStyle = setLigandStyle;\n    this.setModel = setModel;\n    this.setHydrogenVisibility = setHydrogenVisibility;\n    this.setIonVisibility = setIonVisibility;\n    this.setWaterVisibility = setWaterVisibility;\n    this.setClashVisibility = setClashVisibility;\n    this.setQuality = setQuality;\n    this.setAssembly = setAssembly;\n    this.setColorScheme = setColorScheme;\n    this.setSpin = setSpin;\n    this.setSpinStage = setSpinStage;\n    this.setSymmetry = setSymmetry;\n    this.setInteraction = setInteraction;\n    this.setFocus = setFocus;\n    this.getStyleNames = getStyleNames;\n    this.getLigandStyleNames = getLigandStyleNames;\n    this.getModelNames = getModelNames;\n    this.getAssemblyNames = getAssemblyNames;\n    this.getColorSchemeNames = getColorSchemeNames;\n    this.getSymmetryNames = getSymmetryNames;\n    this.getInteractionNames = getInteractionNames;\n    // rl - added these\n    this.setStage = setStage;\n    this.setStructure = setStructure;\n    this.setPdbid = setPdbid;\n    // vars\n    this.getStyle = function() {\n        return style;\n    };\n    this.getLigandStyle = function() {\n        return ligandStyle;\n    };\n    this.getModel = function() {\n        return model;\n    };\n    this.getHydrogenVisibility = function() {\n        return hydrogenVisibility;\n    };\n    this.getIonVisibility = function() {\n        return ionVisibility;\n    };\n    this.getWaterVisibility = function() {\n        return waterVisibility;\n    };\n    this.getClashVisibility = function() {\n        return clashVisibility;\n    };\n    this.getQuality = function() {\n        return quality;\n    };\n    this.getAssembly = function() {\n        return assembly;\n    };\n    this.getSymmetry = function() {\n        return symmetry;\n    };\n    this.getInteraction = function() {\n        return interaction;\n    };\n    this.getColorScheme = function() {\n        return colorScheme;\n    };\n    this.getSpin = function() {\n        return spin;\n    };\n    this.getFocus = function() {\n        return focus;\n    };\n    // rl added\n    this.getPdbid = function() { return pdbid; };\n    this.getAtomCount = function() { return atomCount; };\n};\n\n// END NglController ===================================================================================================\n\n// helper functions fro NglController ==================================================================================\nfunction xhrPromise(url, responseType) {\n    return new Promise(function(resolve, reject) {\n        var xhr = new XMLHttpRequest();\n        xhr.addEventListener(\"load\", function() {\n            if (xhr.status === 200 || xhr.status === 304) {\n                resolve(xhr.response);\n            } else {\n                reject(xhr.status);\n            }\n        }, true);\n        xhr.addEventListener(\"error\", function(event) {\n            reject(event);\n        }, true);\n        xhr.responseType = responseType;\n        xhr.open(\"GET\", url);\n        xhr.send();\n    });\n}\n\nfunction retrieveSymmetryData(pdbid, bioassembly) {\n    var bionumber = bioassembly2bionumber(bioassembly);\n    var basePath = rcsbUrl + \"/pdb/json/symmetryOrientation\";\n    var url = basePath + \"?pdbID=\" + pdbid + \"&bioassembly=\" + bionumber;\n    return xhrPromise(url, \"json\");\n}\n\nfunction retrieveValidationData(pdbid) {\n    pdbid = pdbid.toLowerCase();\n    var baseUrl = \"http://ftp.wwpdb.org/pub/pdb/validation_reports/\";\n    var filename = pdbid + \"_validation.xml.gz\";\n    var url = baseUrl + pdbid.substr(1, 2) + \"/\" + pdbid + \"/\" + filename;\n    return NGL.autoLoad(url, {\n        ext: \"xml\",\n        useDomParser: true,\n        compressed: false\n    }).then(function(xml) {\n        return new ValidationData(xml);\n    }).catch(function(e) {\n        var xml = document.implementation.createDocument(\"http://wwpdb.org/validation/schema/wwpdb_validation_v002.xsd\", \"wwPDB-validation-information\");\n        return new ValidationData({\n            data: xml\n        });\n    });\n}\n\nfunction bionumber2bioassembly(bionumber) {\n    if (!bionumber || bionumber === \"asym\") {\n        return \"__AU\";\n    } else {\n        return \"BU\" + bionumber;\n    }\n}\n\nfunction bioassembly2bionumber(bioassembly) {\n    if (!bioassembly || bioassembly === \"__AU\") {\n        return \"asym\";\n    } else {\n        return bioassembly.substr(2);\n    }\n}\n\nvar SymmetryBuffer = function(axes, params) {\n    var p = Object.assign({}, params);\n    var c = new NGL.Color(p.color || \"lime\");\n    var radius = p.radius || 0.5;\n    var shape = new NGL.Shape(\"symmetry\", {\n        disableImpostor: false,\n        openEnded: true\n    });\n    axes.forEach(function(ax) {\n        shape.addSphere(ax.start, c, radius);\n        shape.addSphere(ax.end, c, radius);\n        shape.addCylinder(ax.start, ax.end, c, radius);\n    });\n    this.attach = function(component) {\n        shapeRepr = component.addBufferRepresentation(shape.getBufferList());\n    };\n    this.dispose = function() {\n        if (shapeRepr) shapeRepr.dispose();\n    };\n};\n\nvar ValidationData = function(xml) {\n    var rsrzDict = {};\n    var rsccDict = {};\n    var clashDict = {};\n    var geoDict = {};\n    var geoAtomDict = {};\n\n    function getSele(a, atomname, useAltcode) {\n        var icode = a.icode.value;\n        var chain = a.chain.value;\n        var altcode = a.altcode.value;\n        var sele = a.resnum.value;\n        if (icode.trim()) sele += \"^\" + icode;\n        if (chain.trim()) sele += \":\" + chain;\n        if (atomname) sele += \".\" + atomname;\n        if (useAltcode && altcode.trim()) sele += \"%\" + altcode;\n        sele += \"/\" + (parseInt(a.model.value) - 1);\n        return sele;\n    }\n\n    function setBitDict(dict, key, bit) {\n        if (dict[key] === undefined) {\n            dict[key] = bit;\n        } else {\n            dict[key] |= bit;\n        }\n    }\n\n    function countSetBits(i) {\n        i = i - ((i >> 1) & 0x55555555);\n        i = (i & 0x33333333) + ((i >> 2) & 0x33333333);\n        return (((i + (i >> 4)) & 0x0F0F0F0F) * 0x01010101) >> 24;\n    }\n    var groups = xml.data.getElementsByTagName(\"ModelledSubgroup\");\n    for (var i = 0, il = groups.length; i < il; ++i) {\n        var g = groups[i];\n        var ga = g.attributes;\n        var sele = getSele(ga);\n        var clashes = g.getElementsByTagName(\"clash\");\n        for (var j = 0, jl = clashes.length; j < jl; ++j) {\n            var ca = clashes[j].attributes;\n            var cid = parseInt(ca.cid.value);\n            if (clashDict[cid] === undefined) {\n                clashDict[cid] = {\n                    mag: parseFloat(ca.clashmag.value),\n                    dist: parseFloat(ca.dist.value),\n                    sele1: getSele(ga, ca.atom.value, true),\n                    atom1: ca.atom.value,\n                    res1: sele\n                };\n            } else {\n                clashDict[cid].sele2 = getSele(ga, ca.atom.value, true);\n                clashDict[cid].atom2 = ca.atom.value;\n                clashDict[cid].res2 = sele;\n            }\n        }\n    }\n    for (var i = 0, il = groups.length; i < il; ++i) {\n        var g = groups[i];\n        var ga = g.attributes;\n        var sele = getSele(ga);\n        if (ga.rsrz !== undefined) {\n            rsrzDict[sele] = parseFloat(ga.rsrz.value);\n        }\n        if (ga.rscc !== undefined) {\n            rsccDict[sele] = parseFloat(ga.rscc.value);\n        }\n        var isPolymer = ga.seq.value !== \".\";\n        var clashAtoms = [];\n        var geoProblemCount = 0;\n        var clashes = g.getElementsByTagName(\"clash\");\n        for (var j = 0, jl = clashes.length; j < jl; ++j) {\n            var ca = clashes[j].attributes;\n            var cid = parseInt(ca.cid.value);\n            if (clashDict[cid] !== undefined) {\n                var c = clashDict[cid];\n                if (c.res1 === c.res2 || c.atom1 === undefined || c.atom2 === undefined || NGL.guessElement(c.atom1) === \"H\" || NGL.guessElement(c.atom2) === \"H\") {\n                    delete clashDict[cid];\n                } else {\n                    clashAtoms.push(ca.atom.value);\n                }\n            }\n        }\n        if (isPolymer) {\n            if (clashAtoms.length > 0) {\n                geoProblemCount += 1;\n            }\n            var angleOutliers = g.getElementsByTagName(\"angle-outlier\");\n            if (angleOutliers.length > 0) {\n                geoProblemCount += 1;\n            }\n            var bondOutliers = g.getElementsByTagName(\"bond-outlier\");\n            if (bondOutliers.length > 0) {\n                geoProblemCount += 1;\n            }\n            var planeOutliers = g.getElementsByTagName(\"plane-outlier\");\n            if (planeOutliers.length > 0) {\n                geoProblemCount += 1;\n            }\n            if (ga.rota !== undefined && ga.rota.value === \"OUTLIER\") {\n                geoProblemCount += 1;\n            }\n            if (ga.rama !== undefined && ga.rama.value === \"OUTLIER\") {\n                geoProblemCount += 1;\n            }\n            if (ga.RNApucker !== undefined && ga.RNApucker.value === \"outlier\") {\n                geoProblemCount += 1;\n            }\n            if (geoProblemCount > 0) {\n                geoDict[sele] = geoProblemCount;\n            }\n        } else {\n            var mogBondOutliers = g.getElementsByTagName(\"mog-bond-outlier\");\n            var mogAngleOutliers = g.getElementsByTagName(\"mog-angle-outlier\");\n            if (mogBondOutliers.length > 0 || mogAngleOutliers.length > 0 || clashes.length > 0) {\n                var atomDict = {};\n                geoAtomDict[sele] = atomDict;\n                for (var j = 0, jl = clashAtoms.length; j < jl; ++j) {\n                    setBitDict(atomDict, clashAtoms[j], 1);\n                }\n                for (var j = 0, jl = mogBondOutliers.length; j < jl; ++j) {\n                    var mbo = mogBondOutliers[j].attributes;\n                    mbo.atoms.value.split(\",\").forEach(function(atomname) {\n                        setBitDict(atomDict, atomname, 2);\n                    });\n                }\n                for (var j = 0, jl = mogAngleOutliers.length; j < jl; ++j) {\n                    var mao = mogAngleOutliers[j].attributes;\n                    mao.atoms.value.split(\",\").forEach(function(atomname) {\n                        setBitDict(atomDict, atomname, 4);\n                    });\n                }\n            }\n        }\n    }\n    var clashList = [];\n    for (var k in clashDict) {\n        var c = clashDict[k];\n        clashList.push(c.res1, c.res2);\n    }\n    var clashSele = clashList.length ? clashList.join(\" OR \") : \"NONE\";\n    var fitScheme = NGL.ColorMakerRegistry.addScheme(function(params) {\n        this.scale = \"RdYlBu\";\n        this.domain = [2, 0];\n        var rsrzScale = this.getScale();\n        this.domain = [0.678, 1.0];\n        var rsccScale = this.getScale();\n        this.atomColor = function(atom) {\n            var sele = atom.resno;\n            if (atom.inscode) sele += \"^\" + atom.inscode;\n            if (atom.chainname) sele += \":\" + atom.chainname;\n            sele += \"/\" + atom.modelIndex;\n            var rsrz = rsrzDict[sele];\n            if (rsrz !== undefined) {\n                return rsrzScale(rsrz);\n            }\n            var rscc = rsccDict[sele];\n            if (rscc !== undefined) {\n                return rsccScale(rscc);\n            }\n            return 0x909090;\n        };\n    });\n    var geoScheme = NGL.ColorMakerRegistry.addScheme(function(params) {\n        this.atomColor = function(atom) {\n            var geoProblemCount;\n            var sele = atom.resno;\n            if (atom.inscode) sele += \"^\" + atom.inscode;\n            if (atom.chainname) sele += \":\" + atom.chainname;\n            sele += \"/\" + atom.modelIndex;\n            geoAtom = geoAtomDict[sele];\n            if (geoAtom !== undefined) {\n                var atomProblems = geoAtom[atom.atomname] || 0;\n                geoProblemCount = countSetBits(atomProblems);\n            } else {\n                geoProblemCount = geoDict[sele] || 0;\n            }\n            if (geoProblemCount === 0) {\n                return 0x2166ac;\n            } else if (geoProblemCount === 1) {\n                return 0xfee08b;\n            } else if (geoProblemCount === 2) {\n                return 0xf46d43;\n            } else if (geoProblemCount >= 3) {\n                return 0xa50026;\n            }\n            return 0x909090;\n        };\n    });\n    this.clashDict = clashDict;\n    this.clashSele = clashSele;\n    this.fitScheme = fitScheme;\n    this.geoScheme = geoScheme;\n};\n\nvar ClashBuffer = function(clashDict, structure, params) {\n    var p = Object.assign({}, params);\n    var color = new NGL.Color(p.color || \"#f0027f\");\n    var sele = p.sele ? \" and (\" + p.sele + \")\" : undefined;\n    var shape = new NGL.Shape(\"clashes\", {\n        openEnded: false,\n        disableImpostor: true\n    });\n    var s = structure;\n    var ap1 = s.getAtomProxy();\n    var ap2 = s.getAtomProxy();\n    var vDir = new NGL.Vector3();\n    var vPos1 = new NGL.Vector3();\n    var vPos2 = new NGL.Vector3();\n    for (var k in clashDict) {\n        var c = clashDict[k];\n        var sele1 = c.sele1;\n        var sele2 = c.sele2;\n        if (sele !== undefined) {\n            sele1 += sele;\n            sele2 += sele;\n        }\n        ap1.index = s.getAtomIndices(new NGL.Selection(sele1))[0];\n        ap2.index = s.getAtomIndices(new NGL.Selection(sele2))[0];\n        if (ap1.index === undefined || ap2.index === undefined) continue;\n        vDir.subVectors(ap2, ap1).setLength(ap1.vdw);\n        vPos1.copy(ap1).add(vDir);\n        vDir.subVectors(ap1, ap2).setLength(ap2.vdw);\n        vPos2.copy(ap2).add(vDir);\n        var dHalf = ap1.distanceTo(ap2) / 2;\n        var r1 = Math.sqrt(ap1.vdw * ap1.vdw - dHalf * dHalf);\n        var r2 = Math.sqrt(ap2.vdw * ap2.vdw - dHalf * dHalf);\n        shape.addCylinder(vPos1, vPos2, color, (r1 + r2) / 2);\n    }\n    this.attach = function(component) {\n        shapeRepr = component.addBufferRepresentation(shape.getBufferList());\n    };\n    this.setVisibility = function(value) {\n        if (shapeRepr) shapeRepr.setVisibility(value);\n    };\n    this.dispose = function() {\n        if (shapeRepr) shapeRepr.dispose();\n    };\n};\n\nexport { NglController, bionumber2bioassembly }\n","// return querystring parameter by name\nfunction getQueryStringParameterByName(name) {\n    const href = window.location.href;\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n    const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\");\n    const results = regex.exec(href);\n    //if (!results) return null;\n    if (!results) return '';  // return empty string so we don't have to check for null\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\n// inspect any obj for debugging - TODO add recursion\nfunction inspect(obj) {\n    console.log('util: inspect --------------------------');\n    if (Array.isArray(obj)) { // array is obj too so expicitly check for it before checking for object\n        console.log('obj is array');\n        obj.forEach((item) => console.log(item));\n    } else if (obj instanceof Object){\n        for (var prop in obj) {\n            console.log(prop + '=' + obj[prop]);\n        }\n    } else {\n        console.log(typeof obj);\n    }\n}\n\nexport { getQueryStringParameterByName, inspect }\n","import { createStore } from 'redux';\nimport { h, render } from 'preact';\nimport NGL from 'ngl';\n\n// Subscribe > Action > Reducer > Component\nimport { Header, DisplayOptions } from './components/components.js';\nimport { app } from './reducers/reducers.js';\nimport { setAssemblyOptions } from \"./actions/actions.js\";\nimport { initRepr, setColor, setStyle, setSpin, setHydrogen, setWater } from \"./ngl-script.js\";\nimport { NglController } from './ngl-controller';\nimport { getQueryStringParameterByName, inspect } from \"./util.js\";\n\n// Kick start the initialization process\ninit();\n\nfunction init() {\n    // Get the pdbId from the parameterString or set a default pdbId\n    const pdbId = (getQueryStringParameterByName('pdbId') !== '') ? getQueryStringParameterByName('pdbId') : '4cup';\n\n    // Set the NGL Stage, argument is the id of HTML element\n    const stage = new NGL.Stage('viewport');\n    console.log('********** NGL stage created **********');\n\n    // NGL remove all component, load file\n    stage.removeAllComponents();\n\n    // Promise resolves to 'StructureComponent'\n    stage.loadFile( \"rcsb://\" + pdbId, {\n            defaultRepresentation: true\n        } ).then( function( _structureComponent ) {\n            // Utilizing the return promise\n            const structureComponent = _structureComponent;\n            console.log(structureComponent);\n\n            // Function initRepr() - returns console logs\n            initRepr(structureComponent, null);\n\n            // Set Initial State for Redux STORE\n            // TODO this could be combined with setAssemblyOptions\n            const initialState = {\n                pdbId: pdbId,\n                structureTitle: structureComponent.structure.title,\n                spin: false,\n                hydrogen: true,\n                water: false,\n                assembly: structureComponent.defaultAssembly,\n                color: 'rainbow',\n                colorOptions: [\n                    { value: \"rainbow\", label: \"Rainbow\" },\n                    { value: \"secondaryStructure\", label: \"SecondaryStructure\" },\n                    { value: \"chain\", label: \"Chain\" }\n                ],\n                style: 'cartoon',\n                styleOptions: [\n                    { value: \"cartoon\", label: \"Cartoon\" },\n                    { value: \"spheres\", label: \"Spheres\" },\n                    { value: \"surface\", label: \"Surface\" }\n                ]\n            };\n\n\n            const nglController = new NglController( {\n                spin: false,\n            } );\n            nglController.setStage(stage);\n            console.log(nglController.getSpin());\n            // nglController.setSpin(true);\n\n            // Creates a REDUX store that holds the complete state tree of app\n            // createStore(reducer, [preloadedState])\n\n            // Go to reducers.js\n            console.log('********* Store created with the initialState being 2nd variable **********');\n            const store = createStore(app, initialState);\n            console.log('********* Store creation DONE **********');\n\n\n            // Dispatching the action: setAssemblyOptions\n            store.dispatch(\n                setAssemblyOptions(structureComponent.structure)\n            );\n\n            console.log('The assembly options for the specific PDB ID');\n            console.log(store.getState().assemblyOptions);\n\n            // Any change in STATE will trigger call to update NGL stage\n            store.subscribe(() => {\n                updateStageFromReduxStore(structureComponent, store, nglController);\n            });\n\n\n            // Render the UI in index.html\n            initUi(store);\n    });\n}\n\n// Initialize the UI, second argument is the id of the HTML structure\nfunction initUi (store) {\n\n    // Rendering React components to root DOM node\n    const header = document.getElementById('header');\n    const displayOptions = document.getElementById('displayOptions');\n\n    // id, title stored into this.props in Header component\n    render(\n        <Header store={store}/>, header\n    );\n    // Using the store\n    render(\n        <DisplayOptions store={store} />, displayOptions\n    );\n}\n\n// Function to update the NGL STAGE whenever REDUX state changes\nfunction updateStageFromReduxStore(structureComponent, store, nglController) {\n\n    console.log('UPDATING NGL STAGE WITH REDUX STORE. USING NEW STATE');\n    console.log(store.getState());\n\n    // NGL structure component, using functions in ngl-script.js\n    if ( structureComponent && structureComponent.type===\"structure\" ) {\n\n        // Set Assembly, Color, Style\n        structureComponent.setDefaultAssembly( store.getState().assembly );\n        setColor(store.getState().color);\n        setStyle(store.getState().style);\n        setSpin(store.getState().spin);\n        console.log(\"+++++ from NGL controller\");\n        nglController.setSpinStage(true);\n        console.log(\"+++++ end from NGL controller\");\n        setHydrogen(store.getState().hydrogen);\n        setWater(store.getState().water);\n    }\n}\n"],"names":["const","h","Component","actions.setAssembly","actions.setColor","actions.setStyle","actions.setSpin","actions.setWater","actions.setHydrogen","actions.SET_STRUCTURE","actions.SET_ASSEMBLY","actions.SET_ASSEMBLY_OPTIONS","actions.SET_COLOR","actions.SET_STYLE","actions.SET_SPIN","actions.SET_WATER","actions.SET_HYDROGEN","setStyle","setSpin","setColor","setHydrogen","setWater","NGL","createStore","render"],"mappings":"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"}